package com.healthpay.common.service.proCard.impl;

import com.alibaba.fastjson.JSONObject;
import com.healthpay.common.entity.ProRequest;
import com.healthpay.common.entity.ProResponse;
import com.healthpay.common.service.proCard.IPCardService;
import com.healthpay.common.utils.DateUtils;
import com.healthpay.common.utils.HttpPostUtils;
import com.healthpay.common.utils.RandomUtils;
import com.healthpay.common.utils.SSLClient;
import com.yinhai.common.util.sm3.EncodeUtil;
import com.yinhai.common.util.sm4.SM4Utils;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

@Service
public  class ProCardServiceImpl implements IPCardService {
	private Logger logger = LoggerFactory.getLogger(getClass());

	//接口地址
	private String URL="https://202.61.88.181:8091/erhc/ehealthcard/business.do";

	//接口请求封装
	public ProResponse process(ProRequest request,String appSecret) throws Exception {
		String respStr= SSLClient.httpsSendPosthttpclient(URL, toEncryptJson(request,appSecret));
		//将json字符串转换为ProResponse对象
		ProResponse proResponse= JSONObject.parseObject(respStr,ProResponse.class);
		return decryptJsonString(proResponse);//解密响应参数集合
	}

	/**
	 * 请求参数加密等参数初始化工作
	 * @return
	 */
	public String toEncryptJson(ProRequest request,String appSecret) throws Exception {
		request.setTimestamp(String.valueOf(System.currentTimeMillis()));//时间戳
		//需要求摘要的字符串
		String plainText="app_id="+request.getApp_id()+"&biz_content="+request.getBiz_content()
				+"&digest_type="+request.getDigest_type()+"&enc_type="+request.getEnc_type()+
				"&method="+request.getMethod()+"&term_id="+request.getTerm_id()+"&timestamp="+
				request.getTimestamp()+"&version="+request.getVersion()+"&app_secret="+appSecret;
		logger.info("需要求摘要的字符串==="+plainText);
		SM4Utils sm4=new SM4Utils();
		sm4.setSecretKey(appSecret);//设置加载因子

		request.setDigest(new EncodeUtil().SM3(plainText));//摘要字符串sm3加密
		request.setBiz_content(sm4.encryptData_ECB(request.getBiz_content()));//请求参数集合sm4加密
		logger.info("加密后的请求参数==="+JSONObject.toJSONString(request));
		return JSONObject.toJSONString(request);//请求参数转换为json字符串
	}

	/**
	 * 响应参数集合 解密
	 * @throws Exception
	 */
	public ProResponse decryptJsonString(ProResponse proResponse) throws Exception {
		SM4Utils sm4=new SM4Utils();
		sm4.setSecretKey("6046887813FCFA19");//设置加载因子
		String jsonStr=sm4.decryptData_ECB(proResponse.getBiz_content());//解密成json字符串
		proResponse.setBiz_content(jsonStr);
		logger.info("解密后的内容==="+proResponse.getBiz_content());
		return proResponse;
	}

	//省卡管注册电子健康卡
	@Test
	public void register() throws Exception {
		Map<String, Object> content = new HashMap<>();
		content.put("register_no", RandomUtils.getAlterNo());//外部注册流水号
		content.put("register_time", "20190822113059");//外部注册时间
		content.put("apply_type", "01");//申请方式
		content.put("id_type", "01");//证件类型
		content.put("id_no", "511321199208162552");//证件号
		content.put("name","小小马");//姓名
		content.put("gender","1");//性别
		content.put("nation","01");//民族
		content.put("nationality", "CHN");//国籍
		content.put("domicile", "四川成都");//户籍地址
		content.put("birthday","1993-08-15");//出生日期
		content.put("cellphone","18398605498");//手机号码
		content.put("telephone","18398605498");//联系电话
		content.put("address","成都");//居住地址
		content.put("workcode","1");//职业代码
		content.put("maritalstatus","10");//婚姻状态
		content.put("rzfs","05");//认证模式
		content.put("file1","");//认证资料

		ProRequest proRequest = new ProRequest();
		proRequest.setApp_id("9D19FF05-4D51-4596-BEC5-CAD5818A0385");
		proRequest.setMethod("ehc.ehealthcard.register");//接口名称
		proRequest.setBiz_content(JSONObject.toJSONString(content));//请求参数集合
		ProCardServiceImpl pro=new ProCardServiceImpl();
		ProResponse response=pro.process(proRequest,"6046887813FCFA19");
		System.out.println("解密内容为===="+response);
		System.out.println("内容为===="+response.getBiz_content());
	}

	//省卡管获取电子健康卡二维码
	@Test
	public void generate() throws Exception {
		Map<String, Object> content = new HashMap<>();
		content.put("ehealth_card_id", "01511321199208162552");//电子健康卡ID
		content.put("ewmbs", "1");//二维码标识
		content.put("token", "");//金融支付数据
		content.put("generate_no", RandomUtils.getAlterNo());//外部生成流水
		content.put("generate_time", DateUtils.formatDate(new Date(), "yyyyMMddHHmmss"));//外部生成时间
		ProRequest proRequest = new ProRequest();
		proRequest.setApp_id("9D19FF05-4D51-4596-BEC5-CAD5818A0385");
		proRequest.setMethod("ehc.ehealthcode.generate");//接口名称
		proRequest.setBiz_content(JSONObject.toJSONString(content));//请求参数集合
		ProCardServiceImpl pro=new ProCardServiceImpl();
		ProResponse response=pro.process(proRequest,"6046887813FCFA19");
		System.out.println("解密内容为===="+response);
		System.out.println("内容为===="+response.getBiz_content());
	}

	//注销电子健康卡
	@Test
	public void close() throws Exception {
		Map<String, Object> content = new HashMap<>();
		content.put("ehealth_card_id", "01511321199208162552");//电子健康卡ID
		content.put("revoke_no", RandomUtils.getAlterNo());//外部生成流水
		content.put("revoke_time", DateUtils.formatDate(new Date(), "yyyyMMddHHmmss"));//外部生成时间
		ProRequest proRequest = new ProRequest();
		proRequest.setApp_id("9D19FF05-4D51-4596-BEC5-CAD5818A0385");
		proRequest.setMethod("ehc.ehealthcard.close");//接口名称
		proRequest.setBiz_content(JSONObject.toJSONString(content));//请求参数集合
		ProCardServiceImpl pro=new ProCardServiceImpl();
		ProResponse response=pro.process(proRequest,"6046887813FCFA19");
		System.out.println("解密内容为===="+response);
		System.out.println("内容为===="+response.getBiz_content());
	}

	//查询电子健康卡信息
	@Test
	public void query() throws Exception {
		Map<String, Object> content = new HashMap<>();
		content.put("ehealth_card_id", "01511321199208162552");//电子健康卡ID
		content.put("id_type", null);//证件类型
		content.put("id_no", null);//证件号
		content.put("rzfs", "05");//认证模式
		content.put("file1", null);//认证资料
		ProRequest proRequest = new ProRequest();
		proRequest.setApp_id("9D19FF05-4D51-4596-BEC5-CAD5818A0385");
		proRequest.setMethod("ehc.ehealthcode.query");//接口名称
		proRequest.setBiz_content(JSONObject.toJSONString(content));//请求参数集合
		ProCardServiceImpl pro=new ProCardServiceImpl();
		ProResponse response=pro.process(proRequest,"6046887813FCFA19");
		System.out.println("解密内容为===="+response);
		System.out.println("内容为===="+response.getBiz_content());
	}
}
